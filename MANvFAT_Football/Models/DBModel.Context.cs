//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MANvFAT_Football.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBEntities : DbContext
    {
        public DBEntities()
            : base("name=DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AchievementCategories> AchievementCategories { get; set; }
        public virtual DbSet<Achievements> Achievements { get; set; }
        public virtual DbSet<Advertisements> Advertisements { get; set; }
        public virtual DbSet<AlertEvents> AlertEvents { get; set; }
        public virtual DbSet<AuditLogs> AuditLogs { get; set; }
        public virtual DbSet<Cities> Cities { get; set; }
        public virtual DbSet<Countries> Countries { get; set; }
        public virtual DbSet<DashboardNotifications> DashboardNotifications { get; set; }
        public virtual DbSet<ELMAH_Error> ELMAH_Error { get; set; }
        public virtual DbSet<ElmahErrorList> ElmahErrorList { get; set; }
        public virtual DbSet<EmailDomainRestrictions> EmailDomainRestrictions { get; set; }
        public virtual DbSet<Ethnicities> Ethnicities { get; set; }
        public virtual DbSet<Heights> Heights { get; set; }
        public virtual DbSet<PlayerAchievements> PlayerAchievements { get; set; }
        public virtual DbSet<PlayerDailyActivities> PlayerDailyActivities { get; set; }
        public virtual DbSet<PlayerDashboardNotifications> PlayerDashboardNotifications { get; set; }
        public virtual DbSet<PlayerMeasurements> PlayerMeasurements { get; set; }
        public virtual DbSet<PlayerScoreBreakdowns> PlayerScoreBreakdowns { get; set; }
        public virtual DbSet<PlayerWeeklyActivities> PlayerWeeklyActivities { get; set; }
        public virtual DbSet<PlayerWeightLogs> PlayerWeightLogs { get; set; }
        public virtual DbSet<PlayerWeights> PlayerWeights { get; set; }
        public virtual DbSet<Regions> Regions { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<SystemMessages> SystemMessages { get; set; }
        public virtual DbSet<SystemSettings> SystemSettings { get; set; }
        public virtual DbSet<TrainingVideos> TrainingVideos { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<UserSystemMessages> UserSystemMessages { get; set; }
        public virtual DbSet<Weights> Weights { get; set; }
        public virtual DbSet<PlayerDashboard> PlayerDashboard { get; set; }
        public virtual DbSet<Players> Players { get; set; }
        public virtual DbSet<MemberToolsBenefits> MemberToolsBenefits { get; set; }
        public virtual DbSet<PlayerReferrals> PlayerReferrals { get; set; }
        public virtual DbSet<HeaderTexts> HeaderTexts { get; set; }
        public virtual DbSet<PlayerImages> PlayerImages { get; set; }
    
        public virtual int DeleteAllPlayerScoreBreakdowns(string playerIDs)
        {
            var playerIDsParameter = playerIDs != null ?
                new ObjectParameter("PlayerIDs", playerIDs) :
                new ObjectParameter("PlayerIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAllPlayerScoreBreakdowns", playerIDsParameter);
        }
    
        public virtual int DeleteDashboardNotification(Nullable<long> dashboardNotificationID)
        {
            var dashboardNotificationIDParameter = dashboardNotificationID.HasValue ?
                new ObjectParameter("DashboardNotificationID", dashboardNotificationID) :
                new ObjectParameter("DashboardNotificationID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDashboardNotification", dashboardNotificationIDParameter);
        }
    
        public virtual int DeleteDismissedDashboardNotifications()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDismissedDashboardNotifications");
        }
    
        public virtual int DeletePlayer(Nullable<long> playerID)
        {
            var playerIDParameter = playerID.HasValue ?
                new ObjectParameter("PlayerID", playerID) :
                new ObjectParameter("PlayerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePlayer", playerIDParameter);
        }
    
        public virtual int DeleteUser(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", userIDParameter);
        }
    
        public virtual int DismissMultipleAlerts(string selectedAlertIDs, Nullable<bool> dismissed_ByAdmin, Nullable<long> dismissedByAdminUserID, Nullable<bool> dismissed_ByCoach, Nullable<long> dismissedByCoachUserID, Nullable<bool> autoDismiss, Nullable<long> autoAlertUserID)
        {
            var selectedAlertIDsParameter = selectedAlertIDs != null ?
                new ObjectParameter("SelectedAlertIDs", selectedAlertIDs) :
                new ObjectParameter("SelectedAlertIDs", typeof(string));
    
            var dismissed_ByAdminParameter = dismissed_ByAdmin.HasValue ?
                new ObjectParameter("Dismissed_ByAdmin", dismissed_ByAdmin) :
                new ObjectParameter("Dismissed_ByAdmin", typeof(bool));
    
            var dismissedByAdminUserIDParameter = dismissedByAdminUserID.HasValue ?
                new ObjectParameter("DismissedByAdminUserID", dismissedByAdminUserID) :
                new ObjectParameter("DismissedByAdminUserID", typeof(long));
    
            var dismissed_ByCoachParameter = dismissed_ByCoach.HasValue ?
                new ObjectParameter("Dismissed_ByCoach", dismissed_ByCoach) :
                new ObjectParameter("Dismissed_ByCoach", typeof(bool));
    
            var dismissedByCoachUserIDParameter = dismissedByCoachUserID.HasValue ?
                new ObjectParameter("DismissedByCoachUserID", dismissedByCoachUserID) :
                new ObjectParameter("DismissedByCoachUserID", typeof(long));
    
            var autoDismissParameter = autoDismiss.HasValue ?
                new ObjectParameter("AutoDismiss", autoDismiss) :
                new ObjectParameter("AutoDismiss", typeof(bool));
    
            var autoAlertUserIDParameter = autoAlertUserID.HasValue ?
                new ObjectParameter("AutoAlertUserID", autoAlertUserID) :
                new ObjectParameter("AutoAlertUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DismissMultipleAlerts", selectedAlertIDsParameter, dismissed_ByAdminParameter, dismissedByAdminUserIDParameter, dismissed_ByCoachParameter, dismissedByCoachUserIDParameter, autoDismissParameter, autoAlertUserIDParameter);
        }
    
        public virtual int PlayersPaidForBook_TodayOnly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlayersPaidForBook_TodayOnly");
        }
    
        public virtual ObjectResult<rpt_01_Top25PlayersByPercentLoss_Result> rpt_01_Top25PlayersByPercentLoss()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_01_Top25PlayersByPercentLoss_Result>("rpt_01_Top25PlayersByPercentLoss");
        }
    
        public virtual ObjectResult<rpt_02_Top25PlayersByKgLoss_Result> rpt_02_Top25PlayersByKgLoss()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_02_Top25PlayersByKgLoss_Result>("rpt_02_Top25PlayersByKgLoss");
        }
    
        public virtual ObjectResult<rpt_06_Top25PlayersWaistLoss_Result> rpt_06_Top25PlayersWaistLoss()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_06_Top25PlayersWaistLoss_Result>("rpt_06_Top25PlayersWaistLoss");
        }
    
        public virtual int rpt_5PercentPlayerStat(Nullable<int> targetLossWithinWeek, Nullable<decimal> targetPercent, Nullable<long> playerID, Nullable<long> leagueID, Nullable<System.DateTime> leagueStartDate)
        {
            var targetLossWithinWeekParameter = targetLossWithinWeek.HasValue ?
                new ObjectParameter("TargetLossWithinWeek", targetLossWithinWeek) :
                new ObjectParameter("TargetLossWithinWeek", typeof(int));
    
            var targetPercentParameter = targetPercent.HasValue ?
                new ObjectParameter("TargetPercent", targetPercent) :
                new ObjectParameter("TargetPercent", typeof(decimal));
    
            var playerIDParameter = playerID.HasValue ?
                new ObjectParameter("PlayerID", playerID) :
                new ObjectParameter("PlayerID", typeof(long));
    
            var leagueIDParameter = leagueID.HasValue ?
                new ObjectParameter("LeagueID", leagueID) :
                new ObjectParameter("LeagueID", typeof(long));
    
            var leagueStartDateParameter = leagueStartDate.HasValue ?
                new ObjectParameter("LeagueStartDate", leagueStartDate) :
                new ObjectParameter("LeagueStartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rpt_5PercentPlayerStat", targetLossWithinWeekParameter, targetPercentParameter, playerIDParameter, leagueIDParameter, leagueStartDateParameter);
        }
    
        public virtual ObjectResult<SelectAdvertisementPercentAge_Result> SelectAdvertisementPercentAge()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAdvertisementPercentAge_Result>("SelectAdvertisementPercentAge");
        }
    
        public virtual ObjectResult<Nullable<int>> SelectAlertEventIfExists(Nullable<System.DateTime> alertDateTime, string alertType, string alertDesc, Nullable<long> playerID, Nullable<long> teamID, Nullable<bool> active)
        {
            var alertDateTimeParameter = alertDateTime.HasValue ?
                new ObjectParameter("AlertDateTime", alertDateTime) :
                new ObjectParameter("AlertDateTime", typeof(System.DateTime));
    
            var alertTypeParameter = alertType != null ?
                new ObjectParameter("AlertType", alertType) :
                new ObjectParameter("AlertType", typeof(string));
    
            var alertDescParameter = alertDesc != null ?
                new ObjectParameter("AlertDesc", alertDesc) :
                new ObjectParameter("AlertDesc", typeof(string));
    
            var playerIDParameter = playerID.HasValue ?
                new ObjectParameter("PlayerID", playerID) :
                new ObjectParameter("PlayerID", typeof(long));
    
            var teamIDParameter = teamID.HasValue ?
                new ObjectParameter("TeamID", teamID) :
                new ObjectParameter("TeamID", typeof(long));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SelectAlertEventIfExists", alertDateTimeParameter, alertTypeParameter, alertDescParameter, playerIDParameter, teamIDParameter, activeParameter);
        }
    
        public virtual ObjectResult<SelectPlayer_Locked_Unlocked_Achievements_Dashboard_Result> SelectPlayer_Locked_Unlocked_Achievements_Dashboard(Nullable<long> playerID, Nullable<long> achievementCategoryID)
        {
            var playerIDParameter = playerID.HasValue ?
                new ObjectParameter("PlayerID", playerID) :
                new ObjectParameter("PlayerID", typeof(long));
    
            var achievementCategoryIDParameter = achievementCategoryID.HasValue ?
                new ObjectParameter("AchievementCategoryID", achievementCategoryID) :
                new ObjectParameter("AchievementCategoryID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectPlayer_Locked_Unlocked_Achievements_Dashboard_Result>("SelectPlayer_Locked_Unlocked_Achievements_Dashboard", playerIDParameter, achievementCategoryIDParameter);
        }
    
        public virtual ObjectResult<SelectPlayer_PecentAchievementCategoryCompleted_Dashboard_Result> SelectPlayer_PecentAchievementCategoryCompleted_Dashboard(Nullable<long> playerID)
        {
            var playerIDParameter = playerID.HasValue ?
                new ObjectParameter("PlayerID", playerID) :
                new ObjectParameter("PlayerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectPlayer_PecentAchievementCategoryCompleted_Dashboard_Result>("SelectPlayer_PecentAchievementCategoryCompleted_Dashboard", playerIDParameter);
        }
    
        public virtual ObjectResult<SelectPlayerCompleted_RemainingWeightPercentage_Dashboard_Result> SelectPlayerCompleted_RemainingWeightPercentage_Dashboard(Nullable<long> playerID)
        {
            var playerIDParameter = playerID.HasValue ?
                new ObjectParameter("PlayerID", playerID) :
                new ObjectParameter("PlayerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectPlayerCompleted_RemainingWeightPercentage_Dashboard_Result>("SelectPlayerCompleted_RemainingWeightPercentage_Dashboard", playerIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SelectPlayerPercent_CompletedWeeklyActivities(Nullable<long> playerID)
        {
            var playerIDParameter = playerID.HasValue ?
                new ObjectParameter("PlayerID", playerID) :
                new ObjectParameter("PlayerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SelectPlayerPercent_CompletedWeeklyActivities", playerIDParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> SelectPlayerPercentLoss_WeightGoal(Nullable<int> currentWeek, Nullable<decimal> targetPercent, Nullable<long> playerID)
        {
            var currentWeekParameter = currentWeek.HasValue ?
                new ObjectParameter("CurrentWeek", currentWeek) :
                new ObjectParameter("CurrentWeek", typeof(int));
    
            var targetPercentParameter = targetPercent.HasValue ?
                new ObjectParameter("TargetPercent", targetPercent) :
                new ObjectParameter("TargetPercent", typeof(decimal));
    
            var playerIDParameter = playerID.HasValue ?
                new ObjectParameter("PlayerID", playerID) :
                new ObjectParameter("PlayerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("SelectPlayerPercentLoss_WeightGoal", currentWeekParameter, targetPercentParameter, playerIDParameter);
        }
    
        public virtual int SelectPlayerProgressImages(Nullable<long> playerID, Nullable<long> leagueFixtureID)
        {
            var playerIDParameter = playerID.HasValue ?
                new ObjectParameter("PlayerID", playerID) :
                new ObjectParameter("PlayerID", typeof(long));
    
            var leagueFixtureIDParameter = leagueFixtureID.HasValue ?
                new ObjectParameter("LeagueFixtureID", leagueFixtureID) :
                new ObjectParameter("LeagueFixtureID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectPlayerProgressImages", playerIDParameter, leagueFixtureIDParameter);
        }
    
        public virtual int SelectPlayers(Nullable<long> coachUserID)
        {
            var coachUserIDParameter = coachUserID.HasValue ?
                new ObjectParameter("CoachUserID", coachUserID) :
                new ObjectParameter("CoachUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectPlayers", coachUserIDParameter);
        }
    
        public virtual int SelectPlayersBMIPositions(Nullable<long> leagueID, Nullable<bool> isReAssign)
        {
            var leagueIDParameter = leagueID.HasValue ?
                new ObjectParameter("LeagueID", leagueID) :
                new ObjectParameter("LeagueID", typeof(long));
    
            var isReAssignParameter = isReAssign.HasValue ?
                new ObjectParameter("IsReAssign", isReAssign) :
                new ObjectParameter("IsReAssign", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectPlayersBMIPositions", leagueIDParameter, isReAssignParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SelectPlayersRegisteredYesterday(string playerIDs)
        {
            var playerIDsParameter = playerIDs != null ?
                new ObjectParameter("PlayerIDs", playerIDs) :
                new ObjectParameter("PlayerIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SelectPlayersRegisteredYesterday", playerIDsParameter);
        }
    
        public virtual int SelectPlayerWeightLogStats(Nullable<long> playerID)
        {
            var playerIDParameter = playerID.HasValue ?
                new ObjectParameter("PlayerID", playerID) :
                new ObjectParameter("PlayerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectPlayerWeightLogStats", playerIDParameter);
        }
    
        public virtual int SelectPlayerWeightWeekLog(Nullable<long> playerID)
        {
            var playerIDParameter = playerID.HasValue ?
                new ObjectParameter("PlayerID", playerID) :
                new ObjectParameter("PlayerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectPlayerWeightWeekLog", playerIDParameter);
        }
    
        public virtual int SelectStatsEmail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectStatsEmail");
        }
    
        public virtual int SendDashboardDailyEmails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendDashboardDailyEmails");
        }
    
        public virtual int Update_DismissIsLossGain_5(string playerIDs)
        {
            var playerIDsParameter = playerIDs != null ?
                new ObjectParameter("PlayerIDs", playerIDs) :
                new ObjectParameter("PlayerIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_DismissIsLossGain_5", playerIDsParameter);
        }
    
        public virtual int UpdatePlayerHeight_Weight(Nullable<long> playerID, Nullable<long> heightID, Nullable<decimal> weight)
        {
            var playerIDParameter = playerID.HasValue ?
                new ObjectParameter("PlayerID", playerID) :
                new ObjectParameter("PlayerID", typeof(long));
    
            var heightIDParameter = heightID.HasValue ?
                new ObjectParameter("HeightID", heightID) :
                new ObjectParameter("HeightID", typeof(long));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePlayerHeight_Weight", playerIDParameter, heightIDParameter, weightParameter);
        }
    
        public virtual int UpdatePlayerImageAsDefault(Nullable<long> playerImageID)
        {
            var playerImageIDParameter = playerImageID.HasValue ?
                new ObjectParameter("PlayerImageID", playerImageID) :
                new ObjectParameter("PlayerImageID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePlayerImageAsDefault", playerImageIDParameter);
        }
    
        public virtual int InsertAuditLogToHistory(Nullable<System.DateTime> logDate, string auditLogShortDesc, string auditLogLongDesc)
        {
            var logDateParameter = logDate.HasValue ?
                new ObjectParameter("LogDate", logDate) :
                new ObjectParameter("LogDate", typeof(System.DateTime));
    
            var auditLogShortDescParameter = auditLogShortDesc != null ?
                new ObjectParameter("AuditLogShortDesc", auditLogShortDesc) :
                new ObjectParameter("AuditLogShortDesc", typeof(string));
    
            var auditLogLongDescParameter = auditLogLongDesc != null ?
                new ObjectParameter("AuditLogLongDesc", auditLogLongDesc) :
                new ObjectParameter("AuditLogLongDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertAuditLogToHistory", logDateParameter, auditLogShortDescParameter, auditLogLongDescParameter);
        }
    
        public virtual int InsertDashboardNotificationforPlayers(Nullable<long> dashboardNotificationID, string leaguePlayerIDs)
        {
            var dashboardNotificationIDParameter = dashboardNotificationID.HasValue ?
                new ObjectParameter("DashboardNotificationID", dashboardNotificationID) :
                new ObjectParameter("DashboardNotificationID", typeof(long));
    
            var leaguePlayerIDsParameter = leaguePlayerIDs != null ?
                new ObjectParameter("LeaguePlayerIDs", leaguePlayerIDs) :
                new ObjectParameter("LeaguePlayerIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertDashboardNotificationforPlayers", dashboardNotificationIDParameter, leaguePlayerIDsParameter);
        }
    }
}
